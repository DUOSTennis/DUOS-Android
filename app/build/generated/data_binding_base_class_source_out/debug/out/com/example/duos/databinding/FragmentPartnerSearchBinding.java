// Generated by view binder compiler. Do not edit!
package com.example.duos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.duos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPartnerSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView partnerSearchFilterDownIc;

  @NonNull
  public final TextView partnerSearchFilterTv;

  @NonNull
  public final ImageView partnerSearchFilteringIc;

  @NonNull
  public final ConstraintLayout partnerSearchLayout;

  @NonNull
  public final TextView partnerSearchLetsSearchTv;

  @NonNull
  public final TextView partnerSearchMyPartnerTv;

  @NonNull
  public final ImageView partnerSearchMyProfileIv;

  @NonNull
  public final TextView partnerSearchNimTv;

  @NonNull
  public final RecyclerView partnerSearchRecommendedPartnerRv;

  @NonNull
  public final TextView partnerSearchRecommendedPartnerTv;

  @NonNull
  public final TextView partnerSearchUserIdTv;

  private FragmentPartnerSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView partnerSearchFilterDownIc, @NonNull TextView partnerSearchFilterTv,
      @NonNull ImageView partnerSearchFilteringIc, @NonNull ConstraintLayout partnerSearchLayout,
      @NonNull TextView partnerSearchLetsSearchTv, @NonNull TextView partnerSearchMyPartnerTv,
      @NonNull ImageView partnerSearchMyProfileIv, @NonNull TextView partnerSearchNimTv,
      @NonNull RecyclerView partnerSearchRecommendedPartnerRv,
      @NonNull TextView partnerSearchRecommendedPartnerTv,
      @NonNull TextView partnerSearchUserIdTv) {
    this.rootView = rootView;
    this.partnerSearchFilterDownIc = partnerSearchFilterDownIc;
    this.partnerSearchFilterTv = partnerSearchFilterTv;
    this.partnerSearchFilteringIc = partnerSearchFilteringIc;
    this.partnerSearchLayout = partnerSearchLayout;
    this.partnerSearchLetsSearchTv = partnerSearchLetsSearchTv;
    this.partnerSearchMyPartnerTv = partnerSearchMyPartnerTv;
    this.partnerSearchMyProfileIv = partnerSearchMyProfileIv;
    this.partnerSearchNimTv = partnerSearchNimTv;
    this.partnerSearchRecommendedPartnerRv = partnerSearchRecommendedPartnerRv;
    this.partnerSearchRecommendedPartnerTv = partnerSearchRecommendedPartnerTv;
    this.partnerSearchUserIdTv = partnerSearchUserIdTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPartnerSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPartnerSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_partner_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPartnerSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.partner_search_filter_down_ic;
      ImageView partnerSearchFilterDownIc = ViewBindings.findChildViewById(rootView, id);
      if (partnerSearchFilterDownIc == null) {
        break missingId;
      }

      id = R.id.partner_search_filter_tv;
      TextView partnerSearchFilterTv = ViewBindings.findChildViewById(rootView, id);
      if (partnerSearchFilterTv == null) {
        break missingId;
      }

      id = R.id.partner_search_filtering_ic;
      ImageView partnerSearchFilteringIc = ViewBindings.findChildViewById(rootView, id);
      if (partnerSearchFilteringIc == null) {
        break missingId;
      }

      ConstraintLayout partnerSearchLayout = (ConstraintLayout) rootView;

      id = R.id.partner_search_lets_search_tv;
      TextView partnerSearchLetsSearchTv = ViewBindings.findChildViewById(rootView, id);
      if (partnerSearchLetsSearchTv == null) {
        break missingId;
      }

      id = R.id.partner_search_my_partner_tv;
      TextView partnerSearchMyPartnerTv = ViewBindings.findChildViewById(rootView, id);
      if (partnerSearchMyPartnerTv == null) {
        break missingId;
      }

      id = R.id.partner_search_my_profile_iv;
      ImageView partnerSearchMyProfileIv = ViewBindings.findChildViewById(rootView, id);
      if (partnerSearchMyProfileIv == null) {
        break missingId;
      }

      id = R.id.partner_search_nim_tv;
      TextView partnerSearchNimTv = ViewBindings.findChildViewById(rootView, id);
      if (partnerSearchNimTv == null) {
        break missingId;
      }

      id = R.id.partner_search_recommended_partner_rv;
      RecyclerView partnerSearchRecommendedPartnerRv = ViewBindings.findChildViewById(rootView, id);
      if (partnerSearchRecommendedPartnerRv == null) {
        break missingId;
      }

      id = R.id.partner_search_recommended_partner_tv;
      TextView partnerSearchRecommendedPartnerTv = ViewBindings.findChildViewById(rootView, id);
      if (partnerSearchRecommendedPartnerTv == null) {
        break missingId;
      }

      id = R.id.partner_search_user_id_tv;
      TextView partnerSearchUserIdTv = ViewBindings.findChildViewById(rootView, id);
      if (partnerSearchUserIdTv == null) {
        break missingId;
      }

      return new FragmentPartnerSearchBinding((ConstraintLayout) rootView,
          partnerSearchFilterDownIc, partnerSearchFilterTv, partnerSearchFilteringIc,
          partnerSearchLayout, partnerSearchLetsSearchTv, partnerSearchMyPartnerTv,
          partnerSearchMyProfileIv, partnerSearchNimTv, partnerSearchRecommendedPartnerRv,
          partnerSearchRecommendedPartnerTv, partnerSearchUserIdTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
