// Generated by view binder compiler. Do not edit!
package com.example.duos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.duos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMyprofileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView editMyProfileTv;

  @NonNull
  public final FragmentContainerView myPageIntoFragmentContainerFc;

  @NonNull
  public final ConstraintLayout topBarMyProfileCl;

  @NonNull
  public final ImageView topLeftArrowIv;

  @NonNull
  public final View topMyProfileDivider;

  @NonNull
  public final TextView topMyProfileTv;

  private ActivityMyprofileBinding(@NonNull ScrollView rootView, @NonNull TextView editMyProfileTv,
      @NonNull FragmentContainerView myPageIntoFragmentContainerFc,
      @NonNull ConstraintLayout topBarMyProfileCl, @NonNull ImageView topLeftArrowIv,
      @NonNull View topMyProfileDivider, @NonNull TextView topMyProfileTv) {
    this.rootView = rootView;
    this.editMyProfileTv = editMyProfileTv;
    this.myPageIntoFragmentContainerFc = myPageIntoFragmentContainerFc;
    this.topBarMyProfileCl = topBarMyProfileCl;
    this.topLeftArrowIv = topLeftArrowIv;
    this.topMyProfileDivider = topMyProfileDivider;
    this.topMyProfileTv = topMyProfileTv;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyprofileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyprofileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_myprofile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyprofileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_myProfile_tv;
      TextView editMyProfileTv = ViewBindings.findChildViewById(rootView, id);
      if (editMyProfileTv == null) {
        break missingId;
      }

      id = R.id.my_page_into_fragment_container_fc;
      FragmentContainerView myPageIntoFragmentContainerFc = ViewBindings.findChildViewById(rootView, id);
      if (myPageIntoFragmentContainerFc == null) {
        break missingId;
      }

      id = R.id.top_bar_myProfile_cl;
      ConstraintLayout topBarMyProfileCl = ViewBindings.findChildViewById(rootView, id);
      if (topBarMyProfileCl == null) {
        break missingId;
      }

      id = R.id.top_left_arrow_iv;
      ImageView topLeftArrowIv = ViewBindings.findChildViewById(rootView, id);
      if (topLeftArrowIv == null) {
        break missingId;
      }

      id = R.id.top_myProfile_divider;
      View topMyProfileDivider = ViewBindings.findChildViewById(rootView, id);
      if (topMyProfileDivider == null) {
        break missingId;
      }

      id = R.id.top_myProfile_tv;
      TextView topMyProfileTv = ViewBindings.findChildViewById(rootView, id);
      if (topMyProfileTv == null) {
        break missingId;
      }

      return new ActivityMyprofileBinding((ScrollView) rootView, editMyProfileTv,
          myPageIntoFragmentContainerFc, topBarMyProfileCl, topLeftArrowIv, topMyProfileDivider,
          topMyProfileTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
